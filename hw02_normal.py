# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import random
import math

print('Задание №1\n------------------------')
my_list = []
for i in range(0, 10):
    my_list.append(random.randint(-100, 100))
print('Было:', my_list)
i = 0
while i < len(my_list):
    # подкореннное выражение >= 0 и корень числа должен равняться целому числу от корня числа
    if not (my_list[i] >= 0 and (math.sqrt(my_list[i]) == int(math.sqrt(my_list[i])))):
        my_list.remove(my_list[i])
        i -= 1  # элемент удаляется, список сдвигается, поэтому при следующей итерации необходимо проверить элемент
                # с данным индексом еще раз
    else:
        my_list[i] = int(math.sqrt(my_list[i]))  # без int возвращает float-значение, а нам это не нужно.
    i += 1
print('Стало:', my_list)
print('------------------------\n')

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
print('Задание №2\n------------------------')
day = ('Первое', 'Второе', 'Третье', 'Четвертое', 'Пятое', 'Шестое', 'Седьмое', 'Восьмое', 'Девятое', 'Десятое',
       'Одиннадцатое', 'Двенадцатое', 'Тринадцатое', 'Четырнадцатое', 'Пятнадцатое', 'Шестнадцатое', 'Семнадцатое',
       'Восемнадцатое', 'Девятнадцатое', 'Двадцатое', 'Двадцать первое', 'Двадцать второе', 'Двадцать третье',
       'Двадцать четвертое', 'Двадцать пятое', 'Двадцать шестое', 'Двадцать седьмое', 'Двадцать восьмое',
       'Двадцать девятое', 'Тридцатое', 'Тридцать первое')
month = (
    'января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября',
    'декабря')
Date = input('Введите дату в формате dd.mm.yyyy: ').split('.')
# проверяем, является ли каждая часть введённых данных числом, проверяем, подходят ли числа по диапазону.
# Если да, выводим результат.
if Date[0].isdigit() and Date[1].isdigit() and Date[2].isdigit() and (0 < int(Date[0]) <= 31) and (
        0 < int(Date[1]) <= 12) and int(Date[2]) > 0:
    print('Дата в текстовом виде:', day[int(Date[0]) - 1], month[int(Date[1]) - 1], Date[2], 'года.')
else:
    # если нет, выводим сообщение об ошибке ввода.
    print('Ошибка ввода даты!')
print('------------------------\n')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
print('Задание №3\n------------------------')
random_list = []
length = int(input('Сколько должно быть элементов в списке? '))
for i in range(0, length):
    random_list.append(random.randint(-100, 100))
print(random_list)
print('------------------------\n')

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
print('Задание №4\n------------------------')
lst = []
for i in range(0, 10):
    lst.append(random.randint(0, 9))
print('Было:', lst)
lst2 = list(set(lst))
print('Неповтояющиеся элементы: ', lst2)
lst2 = []
# создаём множество и проверяем каждый его элемент, сколько таких же в оригинальном списке.
# Если 1, то уникальный, если больше, то не добавляем в новый список.
for i in set(lst):
    count = 0
    for j in range(0, len(lst)):
        if i == lst[j]:
            count += 1
    if count == 1:
        lst2.append(i)
print('Элементы, которые не имеют повторений:', lst2)